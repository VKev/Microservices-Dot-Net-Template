services:
  guest-microservice:
    build:
      context: ./Microservices
      dockerfile: ./Guest.Microservice/Dockerfile
      args:
        SERVICE_NAME: Guest.Microservice
    image: guest-microservice
    container_name: guest-microservice
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DATABASE_HOST:
      DATABASE_PORT:
      DATABASE_NAME:
      DATABASE_USERNAME:
      DATABASE_PASSWORD:
      ASPNETCORE_URLS: http://+:5001
      RABBITMQ_HOST: rabbit-mq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME:
      RABBITMQ_PASSWORD:
    networks:
      - app-network

  user-microservice:
    build:
      context: ./Microservices
      dockerfile: ./User.Microservice/Dockerfile
    image: user-microservice
    container_name: user-microservice
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DATABASE_HOST:
      DATABASE_PORT:
      DATABASE_NAME:
      DATABASE_USERNAME:
      DATABASE_PASSWORD:
      ASPNETCORE_URLS: http://+:5002
      RABBITMQ_HOST: rabbit-mq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME:
      RABBITMQ_PASSWORD:
    networks:
      - app-network

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: User.Microservice
    image: api-gateway
    container_name: api-gateway
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
    networks:
      - app-network

  rabbit-mq:
    image: rabbitmq:3-management
    container_name: rabbit-mq
    ports:
      - "5672:5672" # RabbitMQ message broker port
      - "15672:15672" # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER:
      RABBITMQ_DEFAULT_PASS:
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
