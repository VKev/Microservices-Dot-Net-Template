services:
  guest-microservice:
    build:
      context: ./Microservices
      dockerfile: ./Guest.Microservice/Dockerfile
      args:
        SERVICE_NAME: Guest.Microservice
    image: guest-microservice
    container_name: guest-microservice
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DATABASE_HOST: 
      DATABASE_PORT: 
      DATABASE_NAME: 
      DATABASE_USERNAME: 
      DATABASE_PASSWORD: 
      ASPNETCORE_URLS: http://+:5001
      RABBITMQ_HOST: rabbit-mq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: 
      RABBITMQ_PASSWORD: 
    depends_on:
      rabbit-mq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  user-microservice:
    build:
      context: ./Microservices
      dockerfile: ./User.Microservice/Dockerfile
      args:
        SERVICE_NAME: User.Microservice
    image: user-microservice
    container_name: user-microservice
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      DATABASE_HOST: 
      DATABASE_PORT: 
      DATABASE_NAME: 
      DATABASE_USERNAME: 
      DATABASE_PASSWORD: 
      ASPNETCORE_URLS: http://+:5002
      RABBITMQ_HOST: rabbit-mq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: 
      RABBITMQ_PASSWORD: 
    depends_on:
      rabbit-mq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    image: api-gateway
    container_name: api-gateway
    ports:
      - "2406:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
    networks:
      - app-network

  rabbit-mq:
    image: rabbitmq:3-management
    container_name: rabbit-mq
    ports:
      - "5672:5672" # RabbitMQ message broker port
      - "15672:15672" # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER: 
      RABBITMQ_DEFAULT_PASS: 
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      redis-server --maxmemory 12gb --maxmemory-policy allkeys-lru

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
